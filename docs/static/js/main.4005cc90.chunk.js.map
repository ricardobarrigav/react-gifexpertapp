{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","category","loading","state","setstate","useEffect","then","img","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAM,OACNC,MAAST,EACTU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMH,GAAN,uBAAAI,EAAA,6DACbC,EADa,0DAC4CC,UAAUN,GADtD,sDAEAO,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAACF,GAAU,IAAD,EAC7B,MAAO,CACHG,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZT,IAAG,UAAEK,EAAKK,cAAP,aAAE,EAAaC,iBAAiBX,QATxB,kBAaZM,GAbY,4CAAH,sDCCPM,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAChC,OACI,sBAAKa,UAAU,OAAf,UACK,qBAAKC,IAAMd,EAAKe,IAAMN,IACtB,4BAAIA,QCFJO,EAAU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZhC,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAW,WACPvB,EAASmB,GACJK,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAEf,UAEZ,CAACD,IAEIE,EDjBiBM,CAAaR,GAA9BZ,EAF4B,EAE5BA,KAAMa,EAFsB,EAEtBA,QAEb,OACI,qCACA,6BAAKD,IACJC,GAAW,2CACZ,qBAAKL,UAAU,YAAf,SAEOR,EAAKE,KAAK,SAACgB,GAAD,OAAS,cAAC,EAAD,eAA+BA,GAAZA,EAAIf,aEY1CkB,EAtBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6CAEQ2C,EAAWpB,KAAI,SAAAU,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADPA,U,MCXjCW,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4005cc90.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setImputValue] = useState('');\r\n\r\n    const handleImputChange = (e) => {\r\n        setImputValue(e.target.value);\r\n    }\r\n    const handleSumbit = (e)=> {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 0){\r\n            setCategories((cats) => [inputValue, ...cats]);\r\n            setImputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSumbit}>\r\n            <input\r\n                type= \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleImputChange}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\n\r\n","\r\nexport const getGifs = async(value) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(value)}&api_key=k4dLFrRwXjtiZ4fpZwajxbQkvms6WcP3`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( (data) => {\r\n        return {\r\n            id: data.id,\r\n            title: data.title,\r\n            url: data.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card\" >\r\n             <img src= {url} alt= {title}/>\r\n             <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading...</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n               data.map( (img) => <GifGridItem key= {img.id} {...img } />)\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then(img =>{\r\n                setTimeout(()=>{\r\n                    setstate({\r\n                        data:img,\r\n                        loading: false\r\n                    })\r\n                },2000)\r\n        })\r\n    },[category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= {setCategories}/>\r\n            <hr></hr>\r\n            <button>Agregar</button>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}